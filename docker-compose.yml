version: '3.5'
services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: "${REGISTRY}/${WEB_NAME}"
    ports:
    - '${WEB_PORT}:3000'
    environment:
      PUBLIC_PORT: "${WEB_PORT}"
    networks:
    - default-net
    volumes:
#    - "${PATH_TO_WEB}:/usr/src/web"
    - web_node_modules:/usr/src/web/node_modules
  api:
    image: "${REGISTRY}/${API_NAME}"
    ports:
    - '${API_PORT}:8080'
    environment:
      DB_HOST: "${DB_HOST}"
      DB_DATABASE: "${DB_NAME}"
      DB_USERNAME: "${DB_USER}"
      DB_PASSWORD: "${DB_PASS}"
    networks:
    - default-net
    volumes:
#    - "${PATH_TO_API}:/usr/src/api"
    - api_vendor_files:/usr/src/api/vendor
  server:
    image: "${REGISTRY}/${SERVER_NAME}"
    ports:
      - '${SERVER_PORT}:80'
    networks:
    - default-net
    depends_on:
      - web
  mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASS}"
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER: "${DB_USER}"
      MYSQL_PASSWORD: "${DB_PASS}"
    ports:
      - '${DB_PORT}:3306'
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
    - default-net
  e2e:
    image: "${REGISTRY}/${E2E_NAME}"
    volumes:
#    - "${PATH_TO_E2E}:/usr/src/e2e"
    - e2e_node_modules:/usr/src/e2e/node_modules
    networks:
    - default-net
networks:
  default-net:
    driver: bridge
volumes:
  web_node_modules:
  e2e_node_modules:
  api_vendor_files:
  mysql_data: